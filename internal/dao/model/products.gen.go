// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameProduct = "products"

// Product mapped from table <products>
type Product struct {
	ID            int64          `gorm:"column:id;type:bigint(20);primaryKey;autoIncrement:true" json:"id"`
	Name          string         `gorm:"column:name;type:varchar(100);not null;index:idx_products_name,priority:1" json:"name"`
	Description   string         `gorm:"column:description;type:text" json:"description"`
	Type          string         `gorm:"column:type;type:varchar(20);index:idx_products_type,priority:1;default:product;comment:类型: product, service" json:"type"` // 类型: product, service
	Category      string         `gorm:"column:category;type:varchar(50);index:idx_products_category,priority:1" json:"category"`
	Price         float64        `gorm:"column:price;type:decimal(10,2);not null;default:0.00" json:"price"`
	Cost          float64        `gorm:"column:cost;type:decimal(10,2);default:0.00" json:"cost"`
	StockQuantity int32          `gorm:"column:stock_quantity;type:int(11)" json:"stock_quantity"`
	MinStockLevel int32          `gorm:"column:min_stock_level;type:int(11);comment:最小库存预警" json:"min_stock_level"` // 最小库存预警
	Unit          string         `gorm:"column:unit;type:varchar(20);default:个;comment:单位" json:"unit"`             // 单位
	IsActive      bool           `gorm:"column:is_active;type:tinyint(1);default:1" json:"is_active"`
	CreatedAt     time.Time      `gorm:"column:created_at;type:timestamp;default:current_timestamp()" json:"created_at"`
	UpdatedAt     time.Time      `gorm:"column:updated_at;type:timestamp;default:current_timestamp()" json:"updated_at"`
	DeletedAt     gorm.DeletedAt `gorm:"column:deleted_at;type:datetime(6);index:idx_products_deleted_at,priority:1" json:"deleted_at"`
}

// TableName Product's table name
func (*Product) TableName() string {
	return TableNameProduct
}
